version: 2.0
executorType: docker
containerInfo:
  - image: rohara/yarnenv:0.6
stages:
  build:
    workDir: /home/ubuntu/project
    steps:
      - type: checkout

      - type: cache-restore
        key: yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - type: shell
        command: yarn install

      - type: shell
        name: Setup GHR
        command: |
          if [[ ! -e ~/ghr ]]; then
            curl -L --create-dirs -o ~/ghr/ghr.zip https://github.com/tcnksm/ghr/releases/download/v0.5.0/ghr_v0.5.0_linux_amd64.zip;
            unzip ~/ghr/ghr.zip -d ~/ghr
          fi
          ln -sF  ~/ghr/ghr /usr/local/bin/ghr
          touch ~/.yarnrc

      - type: shell
        name: Tests
        command: |
          node -v
          if [ "$CIRCLE_BRANCH" == 'master' ]; then
            ./scripts/set-dev-version.js
          fi;
          yarn lint
          yarn test-ci
          yarn check-lockfile
          yarn build-dist
          node ./scripts/build-webpack.js
          ./scripts/build-deb.sh

      - type: cache-save
        key: yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
        paths:
          - "~/.yarn-cache"
          - "~/ghr"

      - type: artifacts-store
        path: artifacts/
        destination: yarnpkg

#deployment:
#  release:
#    tag: /v[0-9]+(\.[0-9]+)*/
#    owner: yarnpkg
#    commands:
#      - ~/ghr/ghr --username yarnpkg --repository yarn --token $KPM_CIRCLE_RELEASE_TOKEN v$(dist/bin/yarn --version) artifacts/
#      - curl https://nightly.yarnpkg.com/sign_releases?token=$SIGN_TOKEN
#      - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
#      - ./scripts/set-installation-method.js "`pwd`/package.json" npm
#      - npm publish

#notify:
#  webhooks:
#    - url: https://nightly.yarnpkg.com/api/archive_circleci
